// Code generated by qapi-gen.py. DO NOT EDIT.
package {{ pkg }}

{%- for method in module.methods %}
  {%- if method.arg %}
import (
{{'\t' }}"encoding/json"
)
    {%- break %}
  {%- endif %}
{%- endfor %}

{%- for method in module.methods %}
    {%- set ret = method.ret or "" -%}
    {%- if ret -%}
        {%- if is_builtin_type(ret) -%}
            {%- set ret = builtin_to_go(ret) -%}
        {%- else -%}
            {%- set ret = capitalize(to_go_camel_case(ret)) -%}
        {%- endif -%}
        {%- set ret = "Response[" ~ ret ~ "]" -%}
    {%- endif -%}
    {%- set arg = method.arg or "" -%}
    {%- if arg -%}
        {%- if is_builtin_type(arg) -%}
            {%- set arg = builtin_to_go(arg) -%}
        {%- else -%}
            {%- set arg = capitalize(to_go_camel_case(arg)) -%}
        {%- endif -%}
        {%- set arg = "arg " ~ arg -%}
    {%- endif %}
func Prepare{{ capitalize(to_go_camel_case(method.name)) }}Request({{ arg }}) (*Request, error) {
{% if arg -%}
{{ '\t' }}arguments, argumentsErr := json.Marshal(arg)
{{ '\t' }}if argumentsErr != nil {
{{ '\t' }}{{ '\t' }}return nil, argumentsErr
{{ '\t' }}}
{% endif -%}
{{ '\t' }}return &Request{
{{ '\t' }}{{ '\t' }}Id: GenerateId(),
{{ '\t' }}{{ '\t' }}Execute: "{{ method.name }}",
{% if arg -%}
{{ '\t' }}{{ '\t' }}Arguments: arguments,
{% endif -%}
{{ '\t' }}}, nil
}

{% endfor -%}
